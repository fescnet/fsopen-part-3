{"version":3,"sources":["components/Filter.js","components/PersonForm.js","components/Person.js","components/Persons.js","services/persons.js","components/Message.js","App.js","index.js"],"names":["Filter","handleTerm","onChange","PersonForm","handleSubmit","handleNameChange","handlePhoneChange","newName","newPhone","onSubmit","value","type","Person","person","deleteHandler","key","name","number","onClick","Persons","filteredPersons","map","p","baseUrl","axios","get","then","response","data","newPerson","post","id","delete","changedPerson","put","Message","text","isError","className","App","useState","persons","setPersons","setNewName","setNewPhone","term","setTerm","message","setMessage","setIsError","clearForm","useEffect","personsService","personsReturned","catch","displayMessage","filter","toUpperCase","includes","setTimeout","event","target","preventDefault","existingPerson","find","window","confirm","error","personCreated","concat","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.49a9bd7c.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Filter = ({handleTerm}) => <div>term shown with <input onChange={handleTerm}  /></div>\r\n\r\nexport default Filter\r\n","import React from 'react'\r\n\r\nconst PersonForm = ({handleSubmit, handleNameChange, handlePhoneChange, newName, newPhone}) => {\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <div>\r\n        name: <input onChange={handleNameChange} value={newName} />\r\n      </div>\r\n      <div>\r\n        number: <input onChange={handlePhoneChange} value={newPhone} />\r\n      </div>\r\n      <div>\r\n        <button type=\"submit\">add</button>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default PersonForm\r\n","import React from 'react'\r\n\r\nconst Person = ({person, deleteHandler}) => <div key={person.name}>{person.name} {person.number} <button onClick={() => { deleteHandler(person) }}>delete</button></div>\r\n\r\nexport default Person\r\n","import React from 'react'\r\nimport Person from './Person'\r\n\r\nconst Persons = ({filteredPersons, deleteHandler}) => (\r\n  <div>\r\n    {filteredPersons.map((p) => <Person key={p.name} person={p} deleteHandler={deleteHandler} />)}\r\n  </div>\r\n)\r\n\r\nexport default Persons\r\n","import axios from 'axios'\r\n\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n  return axios.get(baseUrl).then(response => response.data)\r\n}\r\n\r\nconst create = newPerson => {\r\n  return axios.post(baseUrl, newPerson).then(response => response.data)\r\n}\r\n\r\nconst deleteOne = id => {\r\n  return axios.delete(`${baseUrl}/${id}`).then()\r\n}\r\n\r\nconst update = (id, changedPerson) => {\r\n  return axios.put(`${baseUrl}/${id}`, changedPerson)\r\n    .then(response => response.data)\r\n}\r\n\r\nexport default {\r\n  getAll,\r\n  create,\r\n  deleteOne,\r\n  update\r\n}\r\n","import React from 'react'\r\n\r\nconst Message = ({text, isError}) => {\r\n\r\n  if(text === null){\r\n    return null\r\n  }\r\n\r\n  const className = isError ? 'error' : 'success'\r\n\r\n  return (\r\n    <div className={className}>\r\n      {text}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Message\r\n","import React, { useState, useEffect } from 'react'\nimport Filter from './components/Filter'\nimport PersonForm from './components/PersonForm'\nimport Persons from './components/Persons'\nimport personsService from './services/persons'\nimport Message from './components/Message'\n\nconst App = () => {\n  const [ persons, setPersons ] = useState([])\n  const [ newName, setNewName ] = useState('')\n  const [ newPhone, setNewPhone ] = useState('')\n  const [term, setTerm] = useState('')\n  const [message, setMessage] = useState(null)\n  const [isError, setIsError] = useState(false)\n\n  const getPersonsFromServer = () => {\n    personsService.getAll()\n      .then(personsReturned => {\n        setPersons(personsReturned)\n      })\n      .catch(() => {\n        displayMessage(`Unable to retrieve data from server.`, true)\n      })\n  }\n\n  const clearForm = () => {\n    setNewName('')\n    setNewPhone('')\n  }\n\n  useEffect(getPersonsFromServer, [])\n\n  // handlers\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handlePhoneChange = (event) => {\n    setNewPhone(event.target.value)\n  }\n\n  const handleTerm = (event) => {\n    const value = event.target.value\n    setTerm(value)\n  }\n\n  const handleSubmit = (event) => {\n    event.preventDefault()\n\n    if(!newName){\n      displayMessage('Name is required', true)\n      return;\n    }\n\n    if(!newPhone){\n      displayMessage('Number is required', true)\n      return;\n    }\n\n    // if a number is added to an already existing user, the new number will replace the old number\n    const existingPerson = persons.find(p => p.name.toUpperCase() === newName.toUpperCase())\n    if(existingPerson){\n      if(!window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`))\n        return;\n\n      personsService.update(existingPerson.id, {...existingPerson, number: newPhone})\n        .then(changedPerson => {\n          setPersons(persons.map(p => p.id !== changedPerson.id ? p : changedPerson))\n          clearForm()\n          displayMessage(`Number changed successfully!`, false)\n        })\n        .catch(error => {\n          displayMessage(`The number could not be changed`, true)\n        })\n      return;\n    }\n\n    // it's a new person\n    const newPerson = {name: newName, number: newPhone}\n    personsService.create(newPerson)\n      .then(personCreated => {\n        setPersons(persons.concat(personCreated))\n        clearForm()\n        displayMessage(`Person added!`, false)\n      })\n      .catch(error => {\n        displayMessage(error.response.data.error, true)\n      })\n  }\n\n  // filter\n\n  const filter = (term) => {\n    if(term){\n      return persons.filter((p) => p.name.toUpperCase().includes(term.toUpperCase()))\n    }\n    return persons\n  }\n\n  const filteredPersons = filter(term)\n\n  // delete a person\n\n  const deleteHandler = person => {\n\n    if(!window.confirm(`Delete ${person.name}?`))\n      return false;\n\n    personsService.deleteOne(person.id)\n      .then(() => {\n        setPersons(persons.filter(p => p.id !== person.id))\n        displayMessage(`Person deleted successfully!`, false)\n      })\n      .catch(error => {\n        setPersons(persons.filter(p => p.id !== person.id))\n        displayMessage(`Information of ${person.name} has already been removed from server`, true)\n      })\n  }\n\n  // error / success messages\n\n  const displayMessage = (text, isError) => {\n    setMessage(text)\n    setIsError(isError)\n\n    setTimeout(() => {\n      setMessage(null)\n    }, 5000)\n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Message text={message} isError={isError} />\n      <Filter handleTerm={handleTerm} />\n      <h2>add a new</h2>\n      <PersonForm handleSubmit={handleSubmit} handleNameChange={handleNameChange} handlePhoneChange={handlePhoneChange} newName={newName} newPhone={newPhone} />\n      <h2>Numbers</h2>\n      <Persons filteredPersons={filteredPersons} deleteHandler={deleteHandler} />\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}